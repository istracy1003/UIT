create database QLDT
use QLDT

CREATE TABLE SINHVIEN
(
	MSSV CHAR(8) PRIMARY KEY,
	TENSV NVARCHAR(30) NOT NULL,
	SODT VARCHAR(10),
	LOP CHAR(10) NOT NULL,
	DIACHI NCHAR(30) NOT NULL
)

CREATE TABLE DETAI
(
	MSDT CHAR(6) PRIMARY KEY,
	TENDT NVARCHAR(30) NOT NULL
)

CREATE TABLE HOCVI(
	MSHV INT, 
	TENHV nvarchar(20) NOT NULL,
	PRIMARY KEY(MSHV)
)

CREATE TABLE HOCHAM(
	MSHH int, 
	TENHH nvarchar(20) NOT NULL,
	PRIMARY KEY(MSHH)
)

CREATE TABLE SV_DETAI
(
	MSSV char(8) FOREIGN KEY REFERENCES SINHVIEN(MSSV), 
	MSDT char(6) FOREIGN KEY REFERENCES DETAI(MSDT),
	PRIMARY KEY(MSSV, MSDT)
)

CREATE TABLE GIAOVIEN(
	MSGV int, 
	TENGV nvarchar(30) NOT NULL, 
	DIACHI nvarchar(50) NOT NULL, 
	SODT varchar(10) NOT NULL, 
	MSHH int FOREIGN KEY REFERENCES HOCHAM(MSHH), 
	NAMHH smalldatetime NOT NULL,
	PRIMARY KEY(MSGV)
)

CREATE TABLE CHUYENNGANH(
	MSCN int, 
	TENCN nvarchar(30) NOT NULL,
	PRIMARY KEY(MSCN)
)

CREATE TABLE GV_HV_CN(
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV), 
	MSHV int  FOREIGN KEY REFERENCES HOCVI(MSHV), 
	MSCN int  FOREIGN KEY REFERENCES CHUYENNGANH(MSCN), 
	NAM smalldatetime NOT NULL,
	PRIMARY KEY(MSGV, MSHV, MSCN)
)

CREATE TABLE GV_HDDT(
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV), 
	MSDT char(6) FOREIGN KEY REFERENCES DETAI(MSDT), 
	DIEM float NOT NULL,
	PRIMARY KEY(MSGV, MSDT)
)

CREATE TABLE GV_PBDT(
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV), 
	MSDT char(6) FOREIGN KEY REFERENCES DETAI(MSDT), 
	DIEM float NOT NULL,
	PRIMARY KEY(MSGV, MSDT)
)

CREATE TABLE GV_UVDT(
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV), 
	MSDT char(6) FOREIGN KEY REFERENCES DETAI(MSDT), 
	DIEM float NOT NULL,
	PRIMARY KEY(MSGV, MSDT)
)

CREATE TABLE HOIDONG(
	MSHD int, 
	PHONG int, 
	TGBD smalldatetime,
	NGAYHD smalldatetime NOT NULL, 
	TINHTRANG nvarchar(30) NOT NULL,
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV),
	PRIMARY KEY(MSHD)
)

CREATE TABLE HOIDONG_GV(
	MSHD int  FOREIGN KEY REFERENCES HOIDONG(MSHD), 
	MSGV int FOREIGN KEY REFERENCES GIAOVIEN(MSGV),
	PRIMARY KEY(MSHD, MSGV)
)

CREATE TABLE HOIDONG_DT(
	MSHD int  FOREIGN KEY REFERENCES HOIDONG(MSHD), 
	MSDT char(6) FOREIGN KEY REFERENCES DETAI(MSDT), 
	QUYETDINH nchar(10),
	PRIMARY KEY(MSHD, MSDT)
)

SET DATEFORMAT DMY

--Bang SINHVIEN
INSERT INTO SINHVIEN VALUES('13520001',N'Nguyễn Văn An','0906762255','SE103.U32',N'THỦ ĐỨC')
INSERT INTO SINHVIEN VALUES('13520002',N'Phan Tấn Đạt','0975672350','IE204.T21',N'QUẬN 1')
INSERT INTO SINHVIEN VALUES('13520003',N'Nguyễn Anh Hải','0947578688','IE205.R12',N'QUẬN 9')
INSERT INTO SINHVIEN VALUES('13520004',N'Phạm Tài','0956757869','IE202.A22',N'QUẬN 1')
INSERT INTO SINHVIEN VALUES('13520005',N'Lê Thúy Hằng','0976668688','SE304.E22',N'THỦ ĐỨC')
INSERT INTO SINHVIEN VALUES('13520006',N'Ưng Hồng Ân','0957475898','IE208.F33',N'QUẬN 2')

---BẢNG DETAI
INSERT INTO DETAI VALUES('97001',N'Quản lý thư viện')
INSERT INTO DETAI VALUES('97002',N'Nhận dạng vân tay')
INSERT INTO DETAI VALUES('97003',N'Bán đấu giá trên mạng')
INSERT INTO DETAI VALUES('97004',N'Quản lý siêu thị')
INSERT INTO DETAI VALUES('97005',N'Xử lý ảnh')
INSERT INTO DETAI VALUES('97006',N'Hệ giải toán thông minh')

---BẢNG SV_DETAI
INSERT INTO SV_DETAI VALUES('13520001','97004')
INSERT INTO SV_DETAI VALUES('13520002','97005')
INSERT INTO SV_DETAI VALUES('13520003','97001')
INSERT INTO SV_DETAI VALUES('13520004','97002')
INSERT INTO SV_DETAI VALUES('13520005','97003')
INSERT INTO SV_DETAI VALUES('13520006','97005')

---BẢNG HOCHAM
INSERT INTO HOCHAM VALUES(1,N'PHÓ GIÁO SƯ')
INSERT INTO HOCHAM VALUES(2,N'GIÁO SƯ')

---BẢNG GIAOVIEN
INSERT INTO GIAOVIEN VALUES(00201,N'Trần Trung',N'Bến Tre','35353535',1,'1996')
INSERT INTO GIAOVIEN VALUES(00202,N'Nguyễn Văn An',N'Tiền Giang','67868688',1,'1996')
INSERT INTO GIAOVIEN VALUES(00203,N'Trần Thu Trang',N'Cần Thơ','74758687',1,'1996')
INSERT INTO GIAOVIEN VALUES(00204,N'Nguyễn Thị Loan',N'TP. HCM','56575868',2,'2005')
INSERT INTO GIAOVIEN VALUES(00205,N'Chu Tiến',N'Hà Nội','46466646',2,'2005')

---BẢNG HOCVI
INSERT INTO HOCVI VALUES(1,N'Kỹ sư')
INSERT INTO HOCVI VALUES(2,N'Cử Nhân')
INSERT INTO HOCVI VALUES(3,N'Thạc sĩ')
INSERT INTO HOCVI VALUES(4,N'Tiến sĩ')
INSERT INTO HOCVI VALUES(5,N'Tiến sĩ Khoa học')	

---BẢNG CHUYENNGANH
INSERT INTO CHUYENNGANH VALUES(1,N'Công nghệ Web')
INSERT INTO CHUYENNGANH VALUES(2,N'Mạng xã hội')
INSERT INTO CHUYENNGANH VALUES(3,N'Quản lý CNTT')
INSERT INTO CHUYENNGANH VALUES(4,N'GIS')

---BẢNG GV_HV_CN
INSERT INTO GV_HV_CN VALUES(00201,1,1,'2013')
INSERT INTO GV_HV_CN VALUES(00201,1,2,'2013')
INSERT INTO GV_HV_CN VALUES(00201,2,1,'2014')
INSERT INTO GV_HV_CN VALUES(00202,3,2,'2013')
INSERT INTO GV_HV_CN VALUES(00203,2,4,'2014')
INSERT INTO GV_HV_CN VALUES(00204,3,2,'2014')

---BẢNG GV_HDDT
INSERT INTO GV_HDDT VALUES(00201,'97001',8)
INSERT INTO GV_HDDT VALUES(00202,'97002',7)
INSERT INTO GV_HDDT VALUES(00205,'97001',9)
INSERT INTO GV_HDDT VALUES(00204,'97004',7)
INSERT INTO GV_HDDT VALUES(00203,'97005',9)

---BẢNG GV_PBDT
INSERT INTO GV_PBDT VALUES(00201,'97005',8)
INSERT INTO GV_PBDT VALUES(00202,'97001',7)
INSERT INTO GV_PBDT VALUES(00205,'97004',9)
INSERT INTO GV_PBDT VALUES(00204,'97003',7)
INSERT INTO GV_PBDT VALUES(00203,'97002',9)

---BẢNG GV_UVDT
INSERT INTO GV_UVDT VALUES(00205,'97005',8)
INSERT INTO GV_UVDT VALUES(00202,'97005',7)
INSERT INTO GV_UVDT VALUES(00204,'97005',9)
INSERT INTO GV_UVDT VALUES(00203,'97001',7)
INSERT INTO GV_UVDT VALUES(00204,'97001',9)
INSERT INTO GV_UVDT VALUES(00205,'97001',8)
INSERT INTO GV_UVDT VALUES(00203,'97003',7)
INSERT INTO GV_UVDT VALUES(00201,'97003',9)
INSERT INTO GV_UVDT VALUES(00202,'97003',7)
INSERT INTO GV_UVDT VALUES(00201,'97004',9)
INSERT INTO GV_UVDT VALUES(00202,'97004',8)
INSERT INTO GV_UVDT VALUES(00203,'97004',7)
INSERT INTO GV_UVDT VALUES(00201,'97002',9)
INSERT INTO GV_UVDT VALUES(00204,'97002',7)
INSERT INTO GV_UVDT VALUES(00205,'97002',9)

---BẢNG HOIDONG
INSERT INTO HOIDONG VALUES(1,002,'7:00','29/11/2014',N'Thật',00201)
INSERT INTO HOIDONG VALUES(2,102,'7:00','5/12/2014',N'Thật',00202)
INSERT INTO HOIDONG VALUES(3,003,'8:00','6/12/2014',N'Thật',00203)

---BẢNG HOIDONG_GV
INSERT INTO HOIDONG_GV VALUES(1,00201)
INSERT INTO HOIDONG_GV VALUES(1,00202)
INSERT INTO HOIDONG_GV VALUES(1,00203)
INSERT INTO HOIDONG_GV VALUES(1,00204)
INSERT INTO HOIDONG_GV VALUES(2,00203)
INSERT INTO HOIDONG_GV VALUES(2,00202)
INSERT INTO HOIDONG_GV VALUES(2,00205)
INSERT INTO HOIDONG_GV VALUES(2,00204)
INSERT INTO HOIDONG_GV VALUES(3,00201)
INSERT INTO HOIDONG_GV VALUES(3,00202)
INSERT INTO HOIDONG_GV VALUES(3,00203)
INSERT INTO HOIDONG_GV VALUES(3,00204)


---BẢNG HOIDONG_DT
INSERT INTO HOIDONG_DT VALUES(1,'97001',N'Được')
INSERT INTO HOIDONG_DT VALUES(1,'97002',N'Được')
INSERT INTO HOIDONG_DT VALUES(2,'97001',N'Không')
INSERT INTO HOIDONG_DT VALUES(2,'97004',N'Không')
INSERT INTO HOIDONG_DT VALUES(1,'97005',N'Được')
INSERT INTO HOIDONG_DT VALUES(3,'97001',N'Không')
INSERT INTO HOIDONG_DT VALUES(3,'97002',N'Được')
GO;
--A. STORED PROCEDUREDS VỚI THAM SỐ VÀO
--1. Tham số vào là MSGV, TENGV, SODT, DIACHI, MSHH, NAMHH. 
--Trước khi insert dữ liệu cần kiểm tra MSHH đã tồn tại trong table HOCHAM chưa,
--nếu chưa thì trả về giá trị 0.

CREATE PROC PROC_INSERT_GV_MSHH
@MSGV int, @TENGV nvarchar(30), @SODT varchar(10), @DIACHI nvarchar(50) , @MSHH int, @NAMHH smalldatetime
AS  
BEGIN
	IF exists ( 
		SELECT * from HOCHAM where MSHH =@MSHH )
		BEGIN 
		INSERT INTO GIAOVIEN VALUES ( @MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
		PRINT N'THANH CONG ' 
		END
	ELSE 
		BEGIN 
		PRINT N'MSHH KHONG TON TAI'
		RETURN 0 
		END
END
GO;

--1.1 THUC THI
EXEC PROC_INSERT_GV_MSHH @MSGV=00207, @TENGV=N'Nguyễn Thị C', @DIACHI = N'TPHCM',
@SODT='0123456789', @MSHH = 3, @NAMHH = '2010' -- 0
EXEC PROC_INSERT_GV_MSHH 00209, N'Đỗ Phúc', N'Huế', '0987654321', 2, '2022' -- INSERT

---- 1.2. KIỂM TRA
SELECT * FROM GIAOVIEN

---- 1.3. KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00209

---- 1.4. XÓA
DROP PROC PROC_INSERT_GV_MSHH
GO

--2. Tham số vào là MSGV, TENGV, SODT, DIACHI, MSHH, NAMHH. Trước
--khi insert dữ liệu cần kiểm tra MSGV trong table GIAOVIEN có trùng không,
--nếu trùng thì trả về giá trị 0.

CREATE PROC PROC_INSERT_GV_MSHH
@MSGV int, @TENGV nvarchar(30), @SODT varchar(10), @DIACHI nvarchar(50) , @MSHH int, @NAMHH smalldatetime
AS  
BEGIN
	IF exists ( 
		SELECT * from GIAOVIEN where MSGV =@MSGV )
		BEGIN 
			PRINT N'MSGV DA TON TAI ' 
			RETURN 0
		END
	ELSE 
		BEGIN 
			INSERT INTO GIAOVIEN VALUES ( @MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'THANH CONG' 
		END
END
GO;

--2.1 THUC THI
EXEC PROC_INSERT_GV_MSHH @MSGV=00201, @TENGV=N'Nguyễn Thị C', @DIACHI = N'TPHCM',
@SODT='0123456789', @MSHH = 3, @NAMHH = '2010' -- 0
EXEC PROC_INSERT_GV_MSHH 00209, N'Đỗ Phúc', N'Huế', '0987654321', 2, '2022' -- INSERT

-- 2.2. KIỂM TRA
SELECT * FROM GIAOVIEN

--2.3. KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00209

--2.4. XÓA
DROP PROC PROC_INSERT_GV_MSHH
GO

--3. Giống (1) và (2) kiểm tra xem MSGV có trùng không? MSHH có tồn tại
--chưa? Nếu MSGV trùng thì trả về 0. Nếu MSHH chưa tồn tại trả về 1, ngược
--lại cho insert dữ liệu.

CREATE PROC PROC_INSERT_GV_MSHH
@MSGV int, @TENGV nvarchar(30), @SODT varchar(10), @DIACHI nvarchar(50) , @MSHH int, @NAMHH smalldatetime
AS  
BEGIN
	IF exists ( 
		SELECT * from GIAOVIEN where MSGV =@MSGV )
		BEGIN 
			PRINT N'MSGV DA TON TAI ' 
			RETURN 0
		END
	ELSE 
		BEGIN 
			INSERT INTO GIAOVIEN VALUES ( @MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'THANH CONG' 
		END 
	IF exists ( 
		SELECT * from HOCHAM where MSHH =@MSHH )
		BEGIN 
			INSERT INTO GIAOVIEN VALUES ( @MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'THANH CONG ' 
		END
	ELSE 
		BEGIN 
			PRINT N'MSHH KHONG TON TAI'
			RETURN 1 
		END
END
GO;

--3.1 THUC THI
EXEC PROC_INSERT_GV_MSHH @MSGV=00201, @TENGV=N'Nguyễn Thị C', @DIACHI = N'TPHCM',
@SODT='0123456789', @MSHH = 3, @NAMHH = '2010' -- 0
EXEC PROC_INSERT_GV_MSHH @MSGV=00206, @TENGV=N'Nguyễn Thị C', @DIACHI = N'TPHCM',
@SODT='0123456789', @MSHH = 3, @NAMHH = '2010' -- 1
EXEC PROC_INSERT_GV_MSHH 00209, N'Đỗ Phúc', N'Huế', '0987654321', 2, '2022' -- INSERT

--3.2. KIỂM TRA
SELECT * FROM GIAOVIEN

--3.3. KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00209

--3.4. XÓA
DROP PROC PROC_INSERT_GV_MSHH
GO;

--4. Đưa vào MSDT cũ, TENDT mới. Hãy cập nhật tên đề tài mới với mã đề tài
--cũ không đổi nếu không tìm thấy trả về 0, ngược lại cập nhật và trả về 1.
CREATE PROC PROC_UPDATE_TENDT
@MSDT char(6), @TENDT nvarchar(30)
AS  
BEGIN
	IF exists ( SELECT * from DETAI where MSDT =@MSDT )
		BEGIN 
			UPDATE DETAI  SET TENDT=@TENDT WHERE MSDT=@MSDT
			PRINT N'THANH CONG' 
			RETURN 1
		END
	ELSE 
		BEGIN 
			PRINT N'KHONG TON TAI MSDT' 
			RETURN 0
		END
END
GO;

--4.1 THUC THI
EXEC PROC_UPDATE_TENDT @MSDT=97001, @TENDT=N'Quản lý môn học' -- 0
EXEC PROC_UPDATE_TENDT @MSDT=97007, @TENDT=N'Quản lý môn học' --1

-- 4.2. KIỂM TRA
SELECT * FROM DETAI

--4.3. KHÔI PHỤC DỮ LIỆU
UPDATE DETAI SET TENDT = N'Quản lý thư viện' WHERE MSDT=97001

--4.4. XÓA
DROP PROC PROC_UPDATE_TENDT
GO

--5. Tham số đưa vào MSSV, TENSV mới, DIACHI mới thủ lục dùng để cập
--nhật sinh viên trên, nếu không tìm thấy trả về 0, ngược lại cập nhật và trả về 1.
CREATE PROC PROC_UPDATE_TENSV_DIACHI
@MSSV char(8), @TENSV nvarchar(30), @DIACHI nchar(50)
AS  
BEGIN
	IF exists ( SELECT * from SINHVIEN where MSSV =@MSSV )
		BEGIN 
			UPDATE SINHVIEN  SET TENSV=@TENSV , DIACHI=@DIACHI WHERE MSSV=@MSSV
			PRINT N'THANH CONG' 
			RETURN 1
		END
	ELSE 
		BEGIN 
			PRINT N'KHONG TON TAI MSSV' 
			RETURN 0
		END
END
GO;

--4.1 THUC THI
EXEC PROC_UPDATE_TENSV_DIACHI @MSSV=13520001, @TENSV=N'Nguyễn Văn A', @DIACHI =N'QUẬN 10'-- 1
EXEC PROC_UPDATE_TENSV_DIACHI @MSSV=13520009, @TENSV=N'Nguyễn Văn A', @DIACHI =N'QUẬN 10' --0

-- 4.2. KIỂM TRA
SELECT * FROM SINHVIEN

--4.3. KHÔI PHỤC DỮ LIỆU
UPDATE SINHVIEN SET TENSV = N'Nguyễn Văn An', DIACHI=N'THỦ ĐỨC' WHERE MSSV=13520001

--4.4. XÓA
DROP PROC PROC_UPDATE_TENSV_DIACHI
GO
--B. STORED PROCEDUREDS VỚI THAM SỐ VÀO VÀ RA
--1. Đưa vào TENHV trả ra: Số GV thỏa học vị, nếu không tìm thấy trả về 0.

CREATE PROC PROC_SOGV_BY_HOCVI
@TENHV NVARCHAR(20), @SOLUONGGV INT OUTPUT
AS
BEGIN
-- LOGIC
	IF EXISTS (SELECT * FROM HOCVI WHERE TENHV = @TENHV)
		BEGIN
	-- COUNT
			SELECT @SOLUONGGV = COUNT(*)
			FROM HOCVI, GV_HV_CN
			WHERE HOCVI.MSHV = GV_HV_CN.MSHV AND TENHV = @TENHV
		END
	ELSE
		BEGIN
			PRINT N'TENHV KHONG TON TAI'
			SET @SOLUONGGV = 0
		END
END
GO

---- 1.1. THUC THI VA KIEM TRA
DECLARE @TENHV NVARCHAR(20), @SOLUONGGV INT
SET @TENHV = N'Thạc sĩ'
EXEC PROC_SOGV_BY_HOCVI @TENHV, @SOLUONGGV OUTPUT
PRINT N'Số giáo viên có học vị ' + @TENHV + N' là: ' + CAST(@SOLUONGGV AS NVARCHAR)

---- 1.2. XOA
DROP PROC PROC_SOGV_BY_HOCVI
GO;

--2. Đưa vào MSDT cho biết: Điểm trung bình của đề tài, nếu không tìm thấy trả về 0.
CREATE PROC PROC_DIEM_BY_DETAI
@MSDT CHAR(6), @DIEMTB FLOAT OUTPUT
AS
BEGIN
-- LOGIC
	IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
		BEGIN
	-- AGV
			SELECT @DIEMTB = (GV_HDDT.DIEM + GV_PBDT.DIEM + GV_UVDT.DIEM)/3
			FROM GV_HDDT, GV_PBDT, GV_UVDT
			WHERE GV_HDDT.MSDT = GV_PBDT.MSDT AND GV_PBDT.MSDT = GV_UVDT.MSDT 
		END
	ELSE
		BEGIN
			PRINT N'DETAI KHONG TON TAI'
			SET @DIEMTB = 0
		END
END
GO

---- 2.1. THUC THI VA KIEM TRA
DECLARE @MSDT CHAR(6), @DIEMTB FLOAT 
SET @MSDT = 97009
EXEC PROC_DIEM_BY_DETAI @MSDT, @DIEMTB OUTPUT
PRINT N'Điểm trung bình của đề tài ' + @MSDT + N'là: ' + CAST(@DIEMTB AS NVARCHAR)

---- 2.2. XOA
DROP PROC PROC_DIEM_BY_DETAI
GO;

--3.  
--3.1.1 Đưa vào TENGV trả ra: SDT của giáo viên đó, nếu không tìm thấy trả về 0.
--Nếu trùng tên thì có báo lỗi không? Tại sao?
CREATE PROC PROC_SDT_BY_GIAOVIEN1
@TENGV NVARCHAR(30), @SODT VARCHAR(10) OUTPUT
AS
	BEGIN
-- LOGIC
	IF EXISTS (SELECT * FROM GIAOVIEN WHERE TENGV= @TENGV)
		BEGIN
		SELECT @SODT=SODT
		FROM GIAOVIEN
		WHERE TENGV= @TENGV
		END
	ELSE
		BEGIN
		PRINT N'DETAI KHONG TON TAI'
		SET @SODT = 0
		END
	END

---- 3.1.2. THUC THI VA KIEM TRA
GO
DECLARE @TENGV NVARCHAR(30), @SODT VARCHAR(10)
SET @TENGV =N'Trần Trung'
EXEC PROC_SDT_BY_GIAOVIEN1 @TENGV, @SODT OUTPUT
PRINT N'Số điện thoại của giáo viên ' + @TENGV + N' là: ' + CAST(@SODT AS NVARCHAR)

---- 3.1.3. XOA
DROP PROC PROC_SDT_BY_GIAOVIEN1

--3.2.1 Làm sao để hiện thông báo có bao nhiêu giáo viên trùng tên và trả về các SDT.
GO
CREATE PROCEDURE PROC_SDT_BY_GIAOVIEN2 @TENGV NVARCHAR(30), @SODT CURSOR VARYING OUTPUT
AS
BEGIN
	IF (SELECT COUNT(MSGV) FROM GIAOVIEN WHERE TENGV = @TENGV) > 1 
	BEGIN
		PRINT N'Có trùng tên'
	END
	SET @SODT = CURSOR FOR SELECT SODT FROM GIAOVIEN WHERE TENGV = @TENGV
	OPEN @SODT 
END
GO

---- 3.2.2. THUC THI VA KIEM TRA
DECLARE @MyCursor CURSOR											
EXEC PROC_SDT_BY_GIAOVIEN2 N'Trần Trung', @SODT = @MyCursor OUTPUT	
DECLARE @SDT VARCHAR(10)
FETCH @MyCursor INTO @SDT 
IF(@@FETCH_STATUS <> 0)
	PRINT 0 
ELSE
	BEGIN
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN
			PRINT @SDT 
			FETCH NEXT FROM @MyCursor INTO @SDT 
		END 
		CLOSE @MyCursor 
		DEALLOCATE @MyCursor 
	END

----3.2.3. KHOI PHUC
DELETE FROM GIAOVIEN WHERE MSGV=00206

---- 3.2.4. XOA
DROP PROC PROC_SDT_BY_GIAOVIEN2

---4. Đưa vào MSHD cho biết: Điểm trung bình các đề tài của hội đồng đó.
GO
CREATE PROC PROC_DTB_BY_HOIDONG @MSHD INT, @DIEMTB FLOAT OUTPUT
AS
BEGIN
	-- LOGIC
	IF EXISTS (SELECT * FROM HOIDONG_DT WHERE MSHD = @MSHD)
	BEGIN
		SELECT DT.MSDT AS 'MaDeTai', AVG(DT.DIEM) AS 'DiemTrungBinh'
		FROM
		(
			SELECT GV_HDDT.MSDT, DIEM FROM GV_HDDT INNER JOIN HOIDONG_DT ON GV_HDDT.MSDT=HOIDONG_DT.MSDT WHERE MSHD = @MSHD
			UNION ALL
			SELECT GV_PBDT.MSDT, DIEM FROM GV_PBDT INNER JOIN HOIDONG_DT ON GV_PBDT.MSDT=HOIDONG_DT.MSDT WHERE MSHD = @MSHD
			UNION ALL
			SELECT GV_UVDT.MSDT, DIEM FROM GV_UVDT INNER JOIN HOIDONG_DT ON GV_UVDT.MSDT=HOIDONG_DT.MSDT WHERE MSHD = @MSHD
		) AS DT
		GROUP BY DT.MSDT
	END
	ELSE
	BEGIN
		PRINT N'HOI DONG KHONG TON TAI'
	END
END

---- 4.1. THUC THI VA KIEM TRA 
GO
DECLARE @MSHD INT, @DIEMTB FLOAT 
SET @MSHD = 1
EXEC PROC_DTB_BY_HOIDONG @MSHD, @DIEMTB OUTPUT
PRINT @DIEMTB

----4.2 XOA
DROP PROC PROC_DTB_BY_HOIDONG

--5*. Đưa vào TENGV cho biết: Số đề tài hướng dẫn, số đề tài phản biện do giáo
--viên đó phụ trách. 
GO
CREATE PROCEDURE PROC_DTHDPB_BY_GIAOVIEN @TENGV NVARCHAR(30), @SO_DETAI_HD INT OUTPUT, @SO_DETAI_PB INT OUTPUT
AS
BEGIN
		SELECT @SO_DETAI_HD = COUNT(MSDT) 
		FROM GIAOVIEN INNER JOIN GV_HDDT ON GV_HDDT.MSGV = GIAOVIEN.MSGV 
		WHERE TENGV = @TENGV 

		SELECT @SO_DETAI_PB = COUNT(MSDT) 
		FROM GIAOVIEN INNER JOIN GV_PBDT ON GV_PBDT.MSGV = GIAOVIEN.MSGV 
		WHERE TENGV = @TENGV 
END ---5.1.1 THUC THI VA KIEM TRA DECLARE @DT_HD INT, @DT_PB INT, @TENGV NVARCHAR(30)
SET @TENGV= N'Trần Trung'
EXEC PROC_DTHDPB_BY_GIAOVIEN @TENGV, @DT_HD OUTPUT, @DT_PB OUTPUT
PRINT N'Số đề tài hướng dẫn ' + CAST(@DT_HD AS NVARCHAR(5))
PRINT N'Số đề tài phản biện ' + CAST(@DT_PB AS NVARCHAR(5))----5.1.2 XOA
DROP PROC PROC_DTHDPB_BY_GIAOVIEN

--Nếu trùng tên thì có báo lỗi không hay hệ thống sẽ đếm tất cả các đề tài của những giáo viên trùng tên đó?
GO
CREATE PROCEDURE PROC_DTHDPB_BY_GIAOVIEN2 @TENGV NVARCHAR(30), @DEM_DT CURSOR VARYING OUTPUT
AS
BEGIN
	IF (SELECT COUNT(MSGV) FROM GIAOVIEN WHERE TENGV = @TENGV) > 1 
	BEGIN
		PRINT N'Có trùng tên giáo viên ' + @TENGV 
	END
	SET @DEM_DT = CURSOR FOR SELECT GIAOVIEN.MSGV, COUNT(GV_HDDT.MSDT), COUNT(GV_PBDT.MSDT) 
							 FROM GIAOVIEN FULL OUTER JOIN GV_PBDT ON GV_PBDT.MSGV = GIAOVIEN.MSGV 
										   FULL OUTER JOIN GV_HDDT ON GV_HDDT.MSGV = GIAOVIEN.MSGV 
							 WHERE TENGV = @TENGV 
							 GROUP BY GIAOVIEN.MSGV 
	OPEN @DEM_DT 
END 

---5.2.1 THUC THI VA KIEM TRA 
INSERT INTO GIAOVIEN VALUES(00206,N'Trần Trung',N'Bến Tre','35353536',1,'1996')
GO
DECLARE @CURSOR_DEMDT CURSOR,@TENGV NVARCHAR(30), @MSGV NVARCHAR(30), @SO_DTHD INT, @SO_DTPB INT
SET @TENGV= N'Trần Trung'
EXEC PROC_DTHDPB_BY_GIAOVIEN2 @TENGV, @DEM_DT = @CURSOR_DEMDT OUTPUT
FETCH @CURSOR_DEMDT INTO @MSGV, @SO_DTHD, @SO_DTPB 
IF(@@FETCH_STATUS = 0)
	BEGIN
		 WHILE(@@FETCH_STATUS = 0)
		BEGIN
			PRINT @MSGV + N' - Số đề tài hướng dẫn: ' + CAST(@SO_DTHD AS NVARCHAR(5)) 
			+ N', số đề tài phản biện: ' + CAST(@SO_DTPB AS NVARCHAR(5))
			FETCH NEXT FROM @CURSOR_DEMDT INTO @MSGV, @SO_DTHD, @SO_DTPB 
		END
		CLOSE @CURSOR_DEMDT 
		DEALLOCATE @CURSOR_DEMDT 
	END
ELSE
	PRINT '0'----5.2.2 KHOI PHUC
DELETE FROM GIAOVIEN WHERE MSGV=00206

----5.2.3 XOA
DROP PROC PROC_DTHDPB_BY_GIAOVIEN2
--C. TRIGGER
--1. Tạo Trigger thỏa mãn điều kiện khi xóa một đề tài sẽ xóa các thông tin liên quan.
GO
CREATE TRIGGER TRG_DELETE_DETAI ON DETAI INSTEAD OF DELETE
AS
BEGIN
	DECLARE @MSDT CHAR(6)
		SELECT @MSDT = MSDT FROM DELETED
		DELETE FROM SV_DETAI WHERE MSDT = @MSDT 
		DELETE FROM HOIDONG_DT WHERE MSDT = @MSDT 
		DELETE FROM DETAI WHERE MSDT = @MSDT 
		DELETE FROM GV_HDDT WHERE MSDT = @MSDT 
		DELETE FROM GV_PBDT WHERE MSDT = @MSDT 
		DELETE FROM GV_UVDT WHERE MSDT = @MSDT 
END

-- 1.1 KIỂM TRA
DELETE FROM DETAI WHERE MSDT = '97001'

--1.2 XÓA
DROP TRIGGER TRG_DELETE_DETAI

--2. Tạo Trigger thỏa mãn ràng buộc là một hội đồng không quá 10 đề tài. Dùng 
--“Group by” có được không? Giải thích.
GO
CREATE TRIGGER TRIG_INSERT_HDDT_SLDT
ON HOIDONG_DT
FOR INSERT
AS
BEGIN
-- LOGIC
-- 1. DEM DUOC SLDT TRONG 1 HD NHUNG KO DUNG GROUP BY
IF (SELECT COUNT(*)
	FROM HOIDONG_DT, INSERTED
	WHERE HOIDONG_DT.MSHD = INSERTED.MSHD) > 10
	BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'1 HĐ KHÔNG QUÁ 10 ĐỀ TÀI', 16, 1)
	RETURN
	END
-- 2. TRONG TRIGGER CO CAM SU DUNG GROUP BY HAY KO?
IF (SELECT COUNT(*)
	FROM HOIDONG_DT, INSERTED
	WHERE HOIDONG_DT.MSHD = INSERTED.MSHD
	GROUP BY INSERTED.MSHD) > 10
	BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'1 HĐ KHÔNG QUÁ 10 ĐỀ TÀI', 16, 1)
	RETURN
	END
END
GO

---- 2.2. KIỂM TRA
---- 2.2.1. KIỂM TRA VỚI INSERT
INSERT INTO HOIDONG_DT VALUES(1,'97003',N'Được') -- BÁO LỖI -> TRIGGER đúng
INSERT INTO HOIDONG_DT VALUES(2,'97006',N'Được') -- KO BÁO LỖI -> TRIGGER đúng

---- 2.2.2. KIỂM TRA DỮ LIỆU TRONG BẢNG
SELECT * FROM HOIDONG_DT

---- 2.3. KHÔI PHỤC DỮ LIỆU
DELETE FROM HOIDONG_DT WHERE MSHD = 2 AND MSDT = '97006'

---- 2.4. XÓA
DROP TRIGGER TRIG_INSERT_HDDT_SLDT

--3. Tạo Trigger thỏa mãn ràng buộc là một đề tài không quá 3 sinh viên. Dùng 
--“Group by” có được không? Giải thích. GOCREATE TRIGGER TRIG_INSERT_SVDETAI_DETAI
ON SV_DETAI
FOR INSERT
AS
BEGIN	IF (SELECT COUNT(*)
	FROM SV_DETAI, INSERTED
	WHERE SV_DETAI.MSDT = INSERTED.MSDT	GROUP BY Inserted.MSDT) > 3	BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'Mỗi đề tài không quá 3 sinh viên', 16, 1)
		RETURN
	ENDEND--3.1 KIEM TRAINSERT INTO SINHVIEN VALUES('13520007','Nguyễn Văn A','0906762256','SE103.U32','Quận 1') --INSERT 2 SINH VIÊN INSERT INTO SINHVIEN VALUES('13520008','Nguyễn Văn B','0906762257','SE103.U32','Quận 1')INSERT INTO SV_DETAI VALUES('13520007','97005') -- KHÔNG BÁO LỖI -> TRGGER ĐÚNGINSERT INTO SV_DETAI VALUES('13520008','97005') -- BÁO LỖI -> TRIGGER SAI--3.2 KIỂM TRA DỮ LIỆU TRONG BẢNG
SELECT * FROM SV_DETAI

--3.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM SV_DETAI WHERE MSSV = '13520007'
DELETE FROM SINHVIEN WHERE MSSV = '13520007'
DELETE FROM SINHVIEN WHERE MSSV = '13520008'

--3.4 XÓA
DROP TRIGGER TRIG_INSERT_SVDETAI_DETAI--4. Tạo Trigger thỏa mãn ràng buộc là một giáo viên muốn có học hàm PGS 
--phải là tiến sĩ.
--- Lệnh tạo Trigger sửa cho bảng GIAOVIEN
GO
CREATE TRIGGER TRG_GIAOVIEN_UPDATE 
ON GIAOVIEN 
FOR UPDATE 
AS 
BEGIN
		IF (SELECT MSHV 
			FROM GV_HV_CN, Inserted   
			WHERE Inserted.MSGV = GV_HV_CN.MSGV AND Inserted.MSHH = 1 ) <> 4 -- MSHH = 1: PGS, MSHV = 4: Tiến sĩ
		BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'Một giáo viên muốn có học hàm PGS phải là tiến sĩ', 16, 1)
		RETURN
		END
END

--4.1.1 KIEM TRAINSERT INTO GIAOVIEN VALUES(00206,N'Nguyễn Văn A',N'Đồng Nai','12345678',2,'2003')
INSERT INTO GV_HV_CN VALUES(00206,3,2,'2018')UPDATE GIAOVIEN SET MSHH=1 WHERE MSGV='00206'--KHÔNG UPDATE ĐƯỢC 
INSERT INTO GIAOVIEN VALUES(00207,N'Nguyễn Văn B',N'Đồng Nai','12345678',2,'2003')
INSERT INTO GV_HV_CN VALUES(00207,4,1,'2018')UPDATE GIAOVIEN SET MSHH=1 WHERE MSGV='00207'-- UPDATE ĐƯỢC --4.1.2 KIỂM TRA DỮ LIỆU TRONG BẢNG
SELECT * FROM GIAOVIEN

--4.1.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM GV_HV_CN WHERE MSGV = 00206
DELETE FROM GIAOVIEN WHERE MSGV = 00206
DELETE FROM GV_HV_CN WHERE MSGV = 00207
DELETE FROM GIAOVIEN WHERE MSGV = 00207

--4.1.4 XÓA
DROP TRIGGER TRG_GIAOVIEN_UPDATE

--- Lệnh tạo Trigger thêm cho bảng GV_HV_CN
GO
CREATE TRIGGER TRG_GIAOVIEN_INSERT 
ON GV_HV_CN 
FOR INSERT  
AS 
BEGIN
		IF (SELECT MSHH 
			FROM GIAOVIEN, Inserted   
			WHERE Inserted.MSGV = GIAOVIEN.MSGV AND Inserted.MSHV <> 4 ) = 1  -- MSHH = 1: PGS, MSHV = 4: Tiến sĩ
		BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'Một giáo viên muốn có học hàm PGS phải là tiến sĩ', 16, 1)
		RETURN
		END
END

--4.2.1 KIEM TRAINSERT INTO GIAOVIEN VALUES(00206,N'Nguyễn Văn A',N'Đồng Nai','12345678',1,'2003')
INSERT INTO GV_HV_CN VALUES(00206,3,2,'2018')-- KHÔNG THÊM ĐƯỢCINSERT INTO GIAOVIEN VALUES(00207,N'Nguyễn Văn B',N'Đồng Nai','12345678',1,'2003')
INSERT INTO GV_HV_CN VALUES(00207,4,1,'2018')--THÊM ĐƯỢC --4.2.2 KIỂM TRA DỮ LIỆU TRONG BẢNG
SELECT * FROM GIAOVIEN

--4.2.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM GV_HV_CN WHERE MSGV = 00207
DELETE FROM GIAOVIEN WHERE MSGV = 00207

--4.2.4 XÓA
DROP TRIGGER TRG_GIAOVIEN_INSERT


--D. FUNCTION
--1. Viết hàm tính điểm trung bình của một đề tài. Giá trị trả về là điểm trung
--bình ứng với mã số đề tài nhập vào
GO
CREATE FUNCTION DTB(@MSDT CHAR(6)) RETURNS FLOAT
AS
BEGIN
-- LOGIC
-- DTB TINH NTN: 3 GV CHAM DIEM CONG LAI CHIA 3
-- THONG TIN DIEM LAY O DAU RA: 3 BANG: GV_HD_DT, GV_PB_DT, GV_UV_DT
DECLARE @DTB FLOAT
IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
BEGIN
SELECT @DTB = AVG(DIEM)
FROM
(SELECT * FROM GV_HDDT UNION
SELECT * FROM GV_PBDT UNION
SELECT * FROM GV_UVDT) AS DIEMTONGHOP
WHERE MSDT = @MSDT
END

IF @DTB IS NULL
SET @DTB = 0
RETURN @DTB
END
GO

-- KIEM TRA
SELECT DBO.DTB('97002') AS DTB

CREATE TABLE DETAI_DIEM(
MSDT CHAR(6) PRIMARY KEY,
DIEMTB FLOAT
)
GO

--2. Trả về kết quả của đề tài theo MSDT nhập vào. Kết quả là DAT nếu như 
--điểm trung bình từ 5 trở lên, và KHONGDAT nếu như điểm trung bình dưới 5. 
CREATE FUNCTION KETQUADETAI (@MSDT CHAR(6))
RETURNS CHAR(8)
AS
BEGIN
	DECLARE @KQ CHAR(8)
	IF (DBO.TINH_DIEMTB_DETAI_FUNC(@MSDT)) >= 5 
		SET @KQ = N'ĐẠT'
	ELSE 
		SET @KQ = N'KHÔNG ĐẠT'
	RETURN @KQ 
END
DROP FUNCTION KETQUA
--KIỂM TRA 
SELECT *, dbo.TINH_DIEMTB_DETAI_FUNC(MSDT)
AS DIEMDT, dbo.KETQUADETAI(MSDT) AS KETQUA 
FROM dbo.DETAI 
--3. Đưa vào MSDT, trả về mã số và họ tên của các sinh viên thực hiện đề tài.
GO
CREATE FUNCTION SVDETAI (@MSDT CHAR(6))
RETURNS TABLE
AS
 RETURN (SELECT SINHVIEN.MSSV, TENSV 
		FROM SV_DETAI,SINHVIEN  
		WHERE SINHVIEN.MSSV = SV_DETAI.MSSV AND MSDT = @MSDT)

-- KIEM TRA
SELECT * FROM SVDETAI ('97002')
-- CURSOR
CREATE TABLE DETAI_DIEM (MSDT CHAR(6) PRIMARY KEY,DIEMTB FLOAT )
--1. Viết Cursor tính điểm trung bình cho từng đề tài. Sau đó lưu kết quả vào
--bảng DETAI_DIEM.
DECLARE @DUYET CURSOR, @MSDT CHAR(6), @DTB FLOAT
SET @DUYET = CURSOR FOR SELECT MSDT FROM DETAI
OPEN @DUYET
FETCH NEXT FROM @DUYET INTO @MSDT
WHILE @@FETCH_STATUS = 0
BEGIN
SELECT @DTB = DBO.DTB(@MSDT)
INSERT INTO DETAI_DIEM VALUES (@MSDT, @DTB)
FETCH NEXT FROM @DUYET INTO @MSDT
END
CLOSE @DUYET
DEALLOCATE @DUYET

--KIEM TRA
SELECT * FROM DETAI_DIEM

--XOA
DROP TABLE dbo.DETAI_DIEM
--2. Gom các bước xử lý của Cursor ở câu 1 vào một Stored Procedure.
GO
CREATE PROC TINHDIEMTB_CURSOR 
AS
BEGIN
	DECLARE @DUYET CURSOR, @MSDT CHAR(6), @DTB FLOAT
	SET @DUYET = CURSOR FOR SELECT MSDT FROM DETAI
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MSDT
	WHILE @@FETCH_STATUS = 0
	BEGIN
	SELECT @DTB = DBO.DTB(@MSDT)
	INSERT INTO DETAI_DIEM VALUES (@MSDT, @DTB)
	FETCH NEXT FROM @DUYET INTO @MSDT
	END
	CLOSE @DUYET
	DEALLOCATE @DUYET
END
--KIEMTRA
EXEC dbo.TINHDIEMTB_CURSOR
SELECT * FROM DETAI_DIEM
--XOA
DROP PROC dbo.TINHDIEMTB_CURSOR
--3*. Tạo thêm cột XEPLOAI có kiểu là NVARCCHAR(20) trong bảng DETAI_DIEM
ALTER TABLE dbo.DETAI_DIEM ADD XEPLOAI NVARCHAR(20)
--viết Cursor cập nhật kết quả xếp loại cho mỗi đề tài như sau:
--+ "Xuất sắc": điểm trung bình từ 9 đến 10.
--+ "Giỏi": điểm trung bình từ 8 đến 9.
--+ "Khá": điểm trung bình từ 7 đến 8.
--+ "Trung bình": điểm trung bình từ 5 đến 6
--+ "Không đạt": điểm trung bình dưới 5.
DECLARE @DUYET CURSOR, @MSDT CHAR(6),@DIEMTB FLOAT
	SET @DUYET = CURSOR FOR SELECT MSDT FROM dbo.DETAI_DIEM
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MSDT
	WHILE @@FETCH_STATUS = 0
	BEGIN
	IF @MSDT IN (SELECT MSDT 
				FROM dbo.DETAI_DIEM 
				WHERE DIEMTB>=9 AND DIEMTB <=10) 
		BEGIN
		UPDATE dbo.DETAI_DIEM
		SET XEPLOAI = N'Xuất sắc'
		WHERE MSDT=@MSDT
		END
	ELSE IF @MSDT IN (SELECT MSDT 
					FROM dbo.DETAI_DIEM 
					WHERE DIEMTB>=8 AND DIEMTB <9) 
		BEGIN
		UPDATE dbo.DETAI_DIEM
		SET XEPLOAI=N'Giỏi'
		WHERE MSDT=@MSDT
		END
	ELSE IF @MSDT IN (SELECT MSDT 
					FROM dbo.DETAI_DIEM 
					WHERE DIEMTB>=7 AND DIEMTB <8) 
		BEGIN
		UPDATE dbo.DETAI_DIEM
		SET XEPLOAI=N'Khá'
		WHERE MSDT=@MSDT
		END
	ELSE IF @MSDT IN (SELECT MSDT 
					FROM dbo.DETAI_DIEM 
					WHERE DIEMTB>=5 AND DIEMTB <6) 
		BEGIN
		UPDATE dbo.DETAI_DIEM
		SET XEPLOAI=N'Trung Bình '
		WHERE MSDT=@MSDT
		END
	ELSE IF @MSDT IN(SELECT MSDT 
					FROM dbo.DETAI_DIEM 
					WHERE DIEMTB <5) 
		BEGIN
		UPDATE dbo.DETAI_DIEM
		SET XEPLOAI=N'Không đạt'
		WHERE MSDT=@MSDT
		END
	FETCH NEXT FROM @DUYET INTO @MSDT
	END
	CLOSE @DUYET
	DEALLOCATE @DUYET

--KIEM TRA
SELECT * FROM dbo.DETAI_DIEM


